{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec16/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmaiTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmaiTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  ;\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), emailInputClasses && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"please enter a valid email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SimpleInput, \"AciSb0DXZyjW8sY4aDzh/7uaUkQ=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmaiTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputHandler","event","target","value","emailInputHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/daphne/projects/sec16/src/components/SimpleInput.js"],"sourcesContent":["      import {  useState } from \"react\";\n\n      const SimpleInput = (props) => {\n      \n      const [enteredName, setEnteredName] = useState('');\n      const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n      const [enteredEmail, setEnteredEmail] = useState('');\n      const [enteredEmaiTouched, setEnteredEmailTouched]= useState(false);\n      \n\n      \n      const enteredNameIsValid = enteredName.trim() !=='';\n      const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n      const enteredEmailIsValid = enteredEmail.includes('@');\n\n      const enteredEmailIsInvalid= !enteredEmailIsValid && enteredEmaiTouched;\n\n      let formIsValid = false;\n      \n        if(enteredNameIsValid) {\n          formIsValid = true;\n      \n      };\n      const nameInputHandler = event=>{\n        setEnteredName(event.target.value);\n      };\n\n      const emailInputHandler = event=>{\n        setEnteredEmail(event.target.value);\n      }\n\n      const nameInputBlurHandler = event => {\n         setEnteredNameTouched(true);\n        \n        }\n        const emailInputBlurHandler = event=>{\n          setEnteredEmail(event.target.value);\n  \n        }\n      \n\n      const formSubmissionHandler = event =>{\n        event.preventDefault();\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid){\n          \n          return;\n        }\n      \n      console.log(enteredName);\n      setEnteredName('');\n      setEnteredNameTouched(false);\n      setEnteredEmail('');\n      setEnteredEmailTouched(false);\n      \n      \n      };\n      \n      const nameInputClasses = nameInputIsInvalid \n        ? 'form-control invalid'\n        : 'form-control';\n        \n        const emailInputClasses = enteredEmailIsInvalid\n        ? 'form-control invalid'\n        : 'form-control';\n\n        return (\n          <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n              <label htmlFor='name'>Your Name</label>\n            <input\n          \n            type='text'\n            id=\"name\"\n            onChange={nameInputHandler}\n            onBlur= {nameInputBlurHandler}\n            value= {enteredName}\n            />\n            {nameInputIsInvalid &&(\n               <p className=\"error-text\">Name must not be empty</p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n\n            <div className={emailInputClasses}>\n              <label htmlFor='email'>Your Email</label>\n            <input\n          \n            type='email'\n            id=\"email\"\n            onChange={emailInputHandler}\n            onBlur= {emailInputBlurHandler}\n            value= {enteredEmail}\n            />\n            {emailInputClasses && \n            (<p className=\"error-text\">please enter a valid email </p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n          </form> \n        );\n        \n        }\n      \n      export default SimpleInput;\n    \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}