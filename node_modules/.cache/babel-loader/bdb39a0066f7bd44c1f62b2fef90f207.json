{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec16/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmai, setEnteredEmail] = useState('');\n  const [enteredEmaiTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmai.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmaiTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  ;\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n\n    const nameInputBlurHandler = event => {\n      setEnteredNameTouched(true);\n    };\n\n    const emailInputBlurHandler = event => {\n      setEnteredEmail(event.target.value);\n\n      const formSubmissionHandler = event => {\n        event.preventDefault();\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid) {\n          return;\n        }\n\n        console.log(enteredName);\n        setEnteredName('');\n        setEnteredNameTouched(false);\n        setEnteredEmail('');\n        setEnteredEmailTouched(false);\n      };\n\n      const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n      const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmissionHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: nameInputClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            onChange: nameInputHandler,\n            onBlur: nameInputBlurHandler,\n            value: enteredName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Name must not be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !formIsValid,\n            children: \" Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: nameInputClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            onChange: emailInputHandler,\n            onBlur: emailInputBlurHandler,\n            value: enteredEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), emailInputClasses && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"please enter a valid email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !formIsValid,\n            children: \" Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    };\n  };\n};\n\n_s(SimpleInput, \"ORKY+mwfGM9+/rt3Hl6VwLNu+ds=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmai","setEnteredEmail","enteredEmaiTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputHandler","event","target","value","emailInputHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses","enteredEmail"],"sources":["/home/daphne/projects/sec16/src/components/SimpleInput.js"],"sourcesContent":["      import {  useState } from \"react\";\n\n      const SimpleInput = (props) => {\n      \n      const [enteredName, setEnteredName] = useState('');\n      const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n      const [enteredEmai, setEnteredEmail] = useState('');\n      const [enteredEmaiTouched, setEnteredEmailTouched]= useState(false);\n      \n\n      \n      const enteredNameIsValid = enteredName.trim() !=='';\n      const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n      const enteredEmailIsValid = enteredEmai.includes('@');\n\n      const enteredEmailIsInvalid= !enteredEmailIsValid && enteredEmaiTouched;\n\n      let formIsValid = false;\n      \n        if(enteredNameIsValid){\n          formIsValid = true;\n       \n      \n        \n      };\n      const nameInputHandler = event=>{\n        setEnteredName(event.target.value);\n      };\n\n      const emailInputHandler = event=>{\n        setEnteredEmail(event.target.value);\n\n\n      const nameInputBlurHandler = event => {\n         setEnteredNameTouched(true);\n        \n        }\n        const emailInputBlurHandler = event=>{\n          setEnteredEmail(event.target.value);\n  \n      \n      \n\n      const formSubmissionHandler = event =>{\n        event.preventDefault();\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid){\n          \n          return;\n        }\n      \n      console.log(enteredName);\n      setEnteredName('');\n      setEnteredNameTouched(false);\n      setEnteredEmail('');\n      setEnteredEmailTouched(false);\n      \n      \n      };\n      \n      const nameInputClasses = nameInputIsInvalid \n        ? 'form-control invalid'\n        : 'form-control';\n        \n        const emailInputClasses = enteredEmailIsInvalid\n        ? 'form-control invalid'\n        : 'form-control';\n\n        return (\n          <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n              <label htmlFor='name'>Your Name</label>\n            <input\n          \n            type='text'\n            id=\"name\"\n            onChange={nameInputHandler}\n            onBlur= {nameInputBlurHandler}\n            value= {enteredName}\n            />\n            {nameInputIsInvalid &&(\n               <p className=\"error-text\">Name must not be empty</p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n\n            <div className={nameInputClasses}>\n              <label htmlFor='email'>Your Email</label>\n            <input\n          \n            type='email'\n            id=\"email\"\n            onChange={emailInputHandler}\n            onBlur= {emailInputBlurHandler}\n            value= {enteredEmail}\n            />\n            {emailInputClasses && \n            (<p className=\"error-text\">please enter a valid email </p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n          </form> \n        );\n        \n        }\n      }}\n\n      export default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}