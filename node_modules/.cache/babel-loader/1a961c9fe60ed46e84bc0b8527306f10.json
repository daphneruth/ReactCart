{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec16/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    InputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    InputBlurHandler: emailBlurHandler,\n    reset: resetemailInput\n  } = useInput(value => value).includes('@'); // const [enteredName, setEnteredName] = useState('');\n  //const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  //const [enteredEmaiTouched, setEnteredEmailTouched]= useState(false);\n  //const enteredNameIsValid = enteredName.trim() !=='';\n  //const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  // const enteredEmailIsValid = enteredEmail.includes('@');\n  //const enteredEmailIsInvalid= !enteredEmailIsValid && enteredEmaiTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  ;\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); //setEnteredName('');\n    //setEnteredNameTouched(false);\n\n    resetNameInput();\n    resetemailInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n\n  const reset = () => {\n    //setEnteredValue('');\n    //setIsTouched(false);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"please enter a valid email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SimpleInput, \"RPAJFKdAfJqhdW9AaTNTsavryAI=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","InputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetemailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/daphne/projects/sec16/src/components/SimpleInput.js"],"sourcesContent":["      import {  useState } from \"react\";\n      import useInput from \"../hooks/use-input\";\n\n      const SimpleInput = (props) => {\n      const {\n        value:enteredName,\n        isValid:enteredNameIsValid,\n        hasError:nameInputHasError,\n        valueChangeHandler:nameChangedHandler,\n        InputBlurHandler:nameBlurHandler,\n        reset:resetNameInput,\n      } = useInput(value =>value.trim() !=='');\n     \n      const {\n        value:enteredEmail,\n        isValid:enteredEmailIsValid,\n        hasError:emailInputHasError,\n        valueChangeHandler:emailChangedHandler,\n        InputBlurHandler:emailBlurHandler,\n        reset:resetemailInput,\n      } = useInput((value) =>value).includes('@');\n\n\n     // const [enteredName, setEnteredName] = useState('');\n      //const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n     // const [enteredEmail, setEnteredEmail] = useState('');\n      //const [enteredEmaiTouched, setEnteredEmailTouched]= useState(false);\n      \n\n      \n      //const enteredNameIsValid = enteredName.trim() !=='';\n      //const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n     // const enteredEmailIsValid = enteredEmail.includes('@');\n\n      //const enteredEmailIsInvalid= !enteredEmailIsValid && enteredEmaiTouched;\n\n      let formIsValid = false;\n      \n        if(enteredNameIsValid  && enteredEmailIsValid) {\n          formIsValid = true;\n      \n      };\n            \n      \n      \n\n      const formSubmissionHandler = event =>{\n        event.preventDefault();\n        \n\n        if (!enteredNameIsValid){\n          \n          return;\n        }\n      \n      console.log(enteredName);\n      //setEnteredName('');\n      //setEnteredNameTouched(false);\n\n      resetNameInput();\n      resetemailInput();\n      };\n      \n      const nameInputClasses = nameInputHasError\n        ? 'form-control invalid'\n        : 'form-control';\n        \n        const emailInputClasses = emailInputHasError\n        ? 'form-control invalid'\n        : 'form-control';\n        \n        const reset =()=> {\n          //setEnteredValue('');\n          //setIsTouched(false);\n          reset();\n        }\n        \n        \n\n        return (\n          <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n              <label htmlFor='name'>Your Name</label>\n            <input\n          \n            type='text'\n            id=\"name\"\n            onChange={nameChangedHandler}\n            onBlur= {nameBlurHandler}\n            value= {enteredName}\n            />\n            {nameInputHasError &&(\n               <p className=\"error-text\">Name must not be empty</p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n\n            <div className={emailInputClasses}>\n              <label htmlFor='email'>Your Email</label>\n            <input\n          \n            type='email'\n            id=\"email\"\n            onChange={emailChangedHandler}\n            onBlur= {emailBlurHandler}\n            value= {enteredEmail}\n            />\n            {emailInputHasError && \n            (<p className=\"error-text\">please enter a valid email </p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n          </form> \n        );\n        \n        }\n      \n      export default SimpleInput;\n    \n"],"mappings":";;;AAAM,SAAUA,QAAV,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM;IACJC,KAAK,EAACC,WADF;IAEJC,OAAO,EAACC,kBAFJ;IAGJC,QAAQ,EAACC,iBAHL;IAIJC,kBAAkB,EAACC,kBAJf;IAKJC,gBAAgB,EAACC,eALb;IAMJC,KAAK,EAACC;EANF,IAOFd,QAAQ,CAACG,KAAK,IAAGA,KAAK,CAACY,IAAN,OAAgB,EAAzB,CAPZ;EASA,MAAM;IACJZ,KAAK,EAACa,YADF;IAEJX,OAAO,EAACY,mBAFJ;IAGJV,QAAQ,EAACW,kBAHL;IAIJT,kBAAkB,EAACU,mBAJf;IAKJR,gBAAgB,EAACS,gBALb;IAMJP,KAAK,EAACQ;EANF,IAOFrB,QAAQ,CAAEG,KAAD,IAAUA,KAAX,CAAR,CAA0BmB,QAA1B,CAAmC,GAAnC,CAPJ,CAV+B,CAoBhC;EACC;EACD;EACC;EAIA;EACA;EAED;EAEC;;EAEA,IAAIC,WAAW,GAAG,KAAlB;;EAEE,IAAGjB,kBAAkB,IAAKW,mBAA1B,EAA+C;IAC7CM,WAAW,GAAG,IAAd;EAEH;;EAAA;;EAKD,MAAMC,qBAAqB,GAAGC,KAAK,IAAG;IACpCA,KAAK,CAACC,cAAN;;IAGA,IAAI,CAACpB,kBAAL,EAAwB;MAEtB;IACD;;IAEHqB,OAAO,CAACC,GAAR,CAAYxB,WAAZ,EATsC,CAUtC;IACA;;IAEAU,cAAc;IACdO,eAAe;EACd,CAfD;;EAiBA,MAAMQ,gBAAgB,GAAGrB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;EAIE,MAAMsB,iBAAiB,GAAGZ,kBAAkB,GAC1C,sBAD0C,GAE1C,cAFF;;EAIA,MAAML,KAAK,GAAE,MAAK;IAChB;IACA;IACAA,KAAK;EACN,CAJD;;EAQA,oBACE;IAAM,QAAQ,EAAEW,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEA;QAEA,IAAI,EAAC,MAFL;QAGA,EAAE,EAAC,MAHH;QAIA,QAAQ,EAAEnB,kBAJV;QAKA,MAAM,EAAGE,eALT;QAMA,KAAK,EAAGR;MANR;QAAA;QAAA;QAAA;MAAA,QAFA,EAUCI,iBAAiB,iBACf;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACe,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF,eAkBE;MAAK,SAAS,EAAEO,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEA;QAEA,IAAI,EAAC,OAFL;QAGA,EAAE,EAAC,OAHH;QAIA,QAAQ,EAAEX,mBAJV;QAKA,MAAM,EAAGC,gBALT;QAMA,KAAK,EAAGJ;MANR;QAAA;QAAA;QAAA;MAAA,QAFA,EAUCE,kBAAkB,iBAClB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXD;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBF,eA+BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACK,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA/BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCC,CAnHH;;GAAMtB,W;UAQFD,Q,EASAA,Q;;;KAjBEC,W;AAqHN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}