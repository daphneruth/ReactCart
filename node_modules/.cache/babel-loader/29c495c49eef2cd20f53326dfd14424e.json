{"ast":null,"code":"var _jsxFileName = \"/home/daphne/projects/sec16/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmaiTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmaiTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  ;\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n\n    const nameInputBlurHandler = event => {\n      setEnteredNameTouched(true);\n    };\n\n    const emailInputBlurHandler = event => {\n      setEnteredEmail(event.target.value);\n    };\n\n    const formSubmissionHandler = event => {\n      event.preventDefault();\n      setEnteredNameTouched(true);\n\n      if (!enteredNameIsValid) {\n        return;\n      }\n\n      console.log(enteredName);\n      setEnteredName('');\n      setEnteredNameTouched(false);\n      setEnteredEmail('');\n      setEnteredEmailTouched(false);\n    };\n\n    const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n    const emailInputClasses = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmissionHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: nameInputHandler,\n          onBlur: nameInputBlurHandler,\n          value: enteredName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: emailInputHandler,\n          onBlur: emailInputBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), emailInputClasses && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"please enter a valid email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this);\n  };\n};\n\n_s(SimpleInput, \"AciSb0DXZyjW8sY4aDzh/7uaUkQ=\");\n\n_c = SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmaiTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputHandler","event","target","value","emailInputHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/daphne/projects/sec16/src/components/SimpleInput.js"],"sourcesContent":["      import {  useState } from \"react\";\n\n      const SimpleInput = (props) => {\n      \n      const [enteredName, setEnteredName] = useState('');\n      const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n      const [enteredEmail, setEnteredEmail] = useState('');\n      const [enteredEmaiTouched, setEnteredEmailTouched]= useState(false);\n      \n\n      \n      const enteredNameIsValid = enteredName.trim() !=='';\n      const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n      const enteredEmailIsValid = enteredEmail.includes('@');\n\n      const enteredEmailIsInvalid= !enteredEmailIsValid && enteredEmaiTouched;\n\n      let formIsValid = false;\n      \n        if(enteredNameIsValid){\n          formIsValid = true;\n       \n      \n        \n      };\n      const nameInputHandler = event=>{\n        setEnteredName(event.target.value);\n      };\n\n      const emailInputHandler = event=>{\n        setEnteredEmail(event.target.value);\n\n\n      const nameInputBlurHandler = event => {\n         setEnteredNameTouched(true);\n        \n        }\n        const emailInputBlurHandler = event=>{\n          setEnteredEmail(event.target.value);\n  \n        }\n      \n\n      const formSubmissionHandler = event =>{\n        event.preventDefault();\n        setEnteredNameTouched(true);\n\n        if (!enteredNameIsValid){\n          \n          return;\n        }\n      \n      console.log(enteredName);\n      setEnteredName('');\n      setEnteredNameTouched(false);\n      setEnteredEmail('');\n      setEnteredEmailTouched(false);\n      \n      \n      };\n      \n      const nameInputClasses = nameInputIsInvalid \n        ? 'form-control invalid'\n        : 'form-control';\n        \n        const emailInputClasses = enteredEmailIsInvalid\n        ? 'form-control invalid'\n        : 'form-control';\n\n        return (\n          <form onSubmit={formSubmissionHandler}>\n            <div className={nameInputClasses}>\n              <label htmlFor='name'>Your Name</label>\n            <input\n          \n            type='text'\n            id=\"name\"\n            onChange={nameInputHandler}\n            onBlur= {nameInputBlurHandler}\n            value= {enteredName}\n            />\n            {nameInputIsInvalid &&(\n               <p className=\"error-text\">Name must not be empty</p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n\n            <div className={emailInputClasses}>\n              <label htmlFor='email'>Your Email</label>\n            <input\n          \n            type='email'\n            id=\"email\"\n            onChange={emailInputHandler}\n            onBlur= {emailInputBlurHandler}\n            value= {enteredEmail}\n            />\n            {emailInputClasses && \n            (<p className=\"error-text\">please enter a valid email </p>)}\n            </div>\n            <div className=\"form-actions\">\n              <button disabled={!formIsValid}> Submit</button>\n            </div>\n          </form> \n        );\n        \n        }\n      }\n      \n    \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}